#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cctype>

void executeCommands(const std::string& productKey) {
    // Build commands with the dynamic product key
    std::string command1 = "slmgr.vbs -upk";
    std::string command2 = "slmgr /ipk " + productKey;
    std::string command3 = "slmgr /skms kms.digiboy.ir";
    std::string command4 = "slmgr /ato";

    // Execute the commands
    system(command1.c_str());
    system(command2.c_str());
    system(command3.c_str());
    system(command4.c_str());
}

int main() {
    // Execute the "systeminfo" command and open a read stream to get the output
    FILE* pipe = _popen("systeminfo", "r");

    if (pipe != nullptr) {
        char buffer[256];
        bool foundOSName = false;

        // Read the output line by line
        while (fgets(buffer, sizeof(buffer), pipe) != nullptr) {
            std::cout << buffer;

            // Search for the line containing "Nombre del sistema operativo" (Operating System Name)
            if (strstr(buffer, "Nombre del sistema operativo") != nullptr) {
                foundOSName = true;
            }

            if (foundOSName && strstr(buffer, ":") != nullptr) {
                char* startOSName = strchr(buffer, ':') + 2;
                if (startOSName != nullptr) {
                    // Move two characters forward to skip ':' and the following space
                    startOSName += 2;

                    // Convert the remaining part to std::string
                    std::string osName(startOSName);

                    // Remove spaces in the string
                    osName.erase(
                        std::remove_if(osName.begin(), osName.end(), ::isspace),
                        osName.end());

                    if (osName == "MicrosoftWindows10Pro") {
                        executeCommands("W269N-WFGWX-YVC9B-4J6C9-T83GX");
                    }
                    else if (osName == "MicrosoftWindows10Enterprise") {
                        executeCommands("NPPR9-FWDCX-D2C8J-H872K-2YT43");
                    }
                    else if (osName == "MicrosoftWindows10Education") {
                        executeCommands("NW6C2-QMPVW-D7KKK-3GKT6-VCFB2");
                    }
                    else if (osName == "MicrosoftWindows10Home") {
                        executeCommands("TX9XD-98N7V-6WMQ6-BX7FG-H8Q99");
                    }
                    else {
                        std::cout << "Invalid version for activation";
                    }
                }

                break;
            }
        }

        // Close the stream
        _pclose(pipe);
    }
    else {
        std::cerr << "Error executing the command." << std::endl;
    }

    return 0;
}
